#!/usr/bin/env node
var r=(e,s)=>()=>(s||e((s={exports:{}}).exports,s),s.exports);var m=r((se,d)=>{var D=()=>(console.log("\x1B[34m%s\x1B[0m","#######################################"),console.log("\x1B[34m%s\x1B[0m","#                                     #"),console.log("\x1B[34;1m%s\x1B[0m","#    Welcome to Create Node App!      #"),console.log("\x1B[34m%s\x1B[0m","#                                     #"),console.log("\x1B[34m%s\x1B[0m","#######################################"),console.log("\x1B[34m%s\x1B[0m","#                                     #"),console.log("\x1B[34;1m%s\x1B[0m","#      Anton Kalik / idedy.com        #"),console.log("\x1B[34m%s\x1B[0m","#                                     #"),console.log("\x1B[34m%s\x1B[0m","#######################################"),new Promise(e=>{setTimeout(()=>{e()},1e3)}));d.exports=D});var g=r((oe,u)=>{function F(e){return e.reduce((s,t)=>{let[n,o]=t.replace(/^-+/,"").split("=");return s[n]=isNaN(o)?o:Number(o),s},{})}u.exports=F});var f=r((te,b)=>{function K(e,s=50){process.stdout.write(e+" ");let t=0,n=setInterval(()=>{t<s?(process.stdout.write("."),t++):clearInterval(n)},500);return n}b.exports=K});var j=r((ne,w)=>{var{exec:$}=require("child_process");function J(e,s,t,n){let o=$(e,{cwd:s});o.stdout.on("data",c=>{t(c)}),o.stderr.on("data",c=>{t(c)}),o.on("exit",n)}w.exports=J});var q=r((re,y)=>{var M=()=>`
import express from 'express';

const app = express();
const PORT = 3000;

app.get('/', (req, res) => res.send('Hello World!'));

app.listen(PORT, () => {
    console.log(\`App listening at http://localhost:\${PORT}\`);
});
`;y.exports=M});var p=r((ce,k)=>{var R={text:(...e)=>{console.log("\x1B[37m%s\x1B[0m",e.join(" "))},warn:(...e)=>{console.log("\x1B[33m%s\x1B[0m",e.join(" "))},error:(...e)=>{console.log("\x1B[31;1m%s\x1B[0m",e.join(" "))},success:(...e)=>{console.log("\x1B[32;1m%s\x1B[0m",e.join(" "))},brand:(...e)=>{console.log("\x1B[34m%s\x1B[0m",e.join(" "))}};k.exports=R});var h=r((ie,O)=>{var i=require("fs"),l=require("path"),{execSync:W}=require("child_process"),v=f(),S=j(),H=q(),a=p(),U=["express"],_=["typescript","@types/node","@types/express","esbuild","ts-node","nodemon","eslint"];function z(e){let s=l.join(process.cwd(),e);i.existsSync(s)||(i.mkdirSync(s,{recursive:!0}),i.mkdirSync(l.join(s,"src"))),W("npm init -y",{cwd:s});let t=v("Installing core dependencies");S(`npm install ${U.join(" ")}`,s,()=>{},()=>{clearInterval(t),a.success("Done!");let n=v("Installing development dependencies");S(`npm install -D ${_.join(" ")}`,s,o=>{},()=>{clearInterval(n),a.success("Done!");let o={compilerOptions:{target:"ES2020",module:"commonjs",outDir:"./dist",strict:!0,esModuleInterop:!0},include:["src/**/*.ts"],exclude:["node_modules"]};i.writeFileSync(l.join(s,"tsconfig.json"),JSON.stringify(o,null,2));let c=l.join(s,"package.json"),x=require(c);x.scripts={start:"node dist/index.js",build:"esbuild src/index.ts --bundle --platform=node --outfile=dist/index.js",dev:"nodemon -r ts-node/register src/index.ts",lint:"eslint 'src/**/*.{ts,tsx}'","lint:fix":"eslint 'src/**/*.{ts,tsx}' --fix",format:"prettier --write 'src/**/*.{ts,tsx}'"},i.writeFileSync(c,JSON.stringify(x,null,2));let T=H();i.writeFileSync(l.join(s,"src","index.ts"),T.trim()),a.success(`${e} - Express app created successfully!`)})})}O.exports=z});var C=r((le,N)=>{function B(e){console.log("Creating Koa app...")}N.exports=B});var G=m(),L=g(),Q=h(),V=C(),I=p(),X={express:Q,koa:V},[Y,...Z]=process.argv.slice(2),P=L(Z),E=P.framework||P.fw;E||(I.error("No framework specified!"),process.exit(1));var A=X[E];G().then(()=>{A?A(Y):I.error("Unsupported framework or no framework specified.")});
